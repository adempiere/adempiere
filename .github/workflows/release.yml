# This is a basic workflow to help you get started with Actions
# This file was contributed by Carlos Parada and Yamel Senih from ERP Consultores y Asociados, C.A

name: ADempiere Publish

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the develop branch
  release:
    types: 
      - published
# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  publish:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    # Service containers to run with `container-job`
    services:
      # Label used to access the service container
      postgres:
        # Docker Hub image
        image: postgres:14.6
        # Provide the password for postgres
        env:
          POSTGRES_PASSWORD: postgres
        ports:
          - 5432:5432
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
          
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3
      
      # Ensure a compatible version of java is used
      - name: Setup Java JDK
        uses: actions/setup-java@v1.4.3
        with:
            java-version: '11'
            java-package: jdk

      # Build ADempiere with ant, if there are changes in XML files
      - name: Build Adempiere with database restore...
        uses: ./.github/actions/adempiere-build
        with:
           nodbrestore: false
           
      - name: Upload zip
        uses: skx/github-action-publish-binaries@master
        env:
          GITHUB_TOKEN: ${{ secrets.TOKEN_ACCESS }}
        with:
          args: 'install/build/*.zip'
      - name: Upload zip.MD5
        uses: skx/github-action-publish-binaries@master
        env:
          GITHUB_TOKEN: ${{ secrets.TOKEN_ACCESS }}
        with:
          args: 'install/build/*.zip.MD5'
      - name: Upload tar.gz
        uses: skx/github-action-publish-binaries@master
        env:
          GITHUB_TOKEN: ${{ secrets.TOKEN_ACCESS }}
        with:
          args: 'install/build/*.tar.gz'
      - name: Upload tar.MD5
        uses: skx/github-action-publish-binaries@master
        env:
          GITHUB_TOKEN: ${{ secrets.TOKEN_ACCESS }}
        with:
          args: 'install/build/*.tar.gz.MD5'
      - name: Upload Seed (Database)
        uses: skx/github-action-publish-binaries@master
        env:
          GITHUB_TOKEN: ${{ secrets.TOKEN_ACCESS }}
        with:
          args: 'adempiere/Adempiere/data/Adempiere_pg.dmp'
      - name: Upload Compressed Seed (Database)
        uses: skx/github-action-publish-binaries@master
        env:
          GITHUB_TOKEN: ${{ secrets.TOKEN_ACCESS }}
        with:
          args: 'adempiere/Adempiere/data/Adempiere_pg.jar'
