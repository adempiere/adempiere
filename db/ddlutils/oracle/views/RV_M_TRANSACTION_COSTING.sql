--DROP VIEW RV_M_Transaction_Costing;CREATE OR REPLACE VIEW RV_M_Transaction_Costing AS SELECT t.M_Transaction_ID, t.AD_Client_ID, t.AD_Org_ID, t.MovementType, t.MovementDate, t.MovementQty, t.M_AttributeSetInstance_ID, t.M_AttributeSet_ID, t.SerNo, t.Lot, t.M_Lot_ID, t.GuaranteeDate, t.M_Product_ID, p.Value, p.Name, p.Description, p.UPC, p.SKU, p.C_UOM_ID, p.M_Product_Category_ID, p.Classification, p.Group1, p.Group2, p.Weight, p.Volume, p.VersionNo, t.DocumentNo, t.C_DocType_ID, t.M_Locator_ID, t.x, t.y, t.z, t.M_Warehouse_ID, t.M_InventoryLine_ID, t.M_Inventory_ID, t.M_Movementline_ID, t.M_Movement_ID, t.M_InOutline_ID, t.M_InOut_ID, t.M_ProductionLine_ID, t.M_ProductionPlan_ID, t.M_Production_ID, t.C_ProjectIssue_id, t.PP_Cost_Collector_ID, cd.C_LandedCostAllocation_ID, cd.C_AcctSchema_ID, cd.M_CostType_ID, cd.M_CostElement_iD, cd.SeqNo, cd.CostAdjustmentDate, cd.CostadjustmentDateLL, cd.DateAcct, cd.CumulatedQty AS BeginningQtyBalance, cd.CurrentcostPrice, cd.CurrentcostPriceLL, cd.IsReversal, cd.IsSOTrx, cd.M_CostDetail_ID, cd.CumulatedAmt + cd.CumulatedAmtLL AS BeginningBalance, cd.qty,        CASE            WHEN cd.qty < 0 THEN cd.amt * (-1)            ELSE cd.amt        END AS amt,        CASE            WHEN cd.qty < 0 THEN cd.amtll * (-1)            ELSE cd.amtll        END AS amtll,        CASE            WHEN cd.qty < 0 THEN cd.costamt * (-1)            ELSE cd.costamt        END AS costamt,        CASE            WHEN cd.qty < 0 THEN cd.costamtll * (-1)            ELSE cd.costamtll        END AS costamtll,        CASE            WHEN cd.qty < 0 THEN cd.costadjustment * (-1)            ELSE cd.costadjustment        END AS costadjustment,        CASE            WHEN cd.qty < 0 THEN cd.costadjustmentll * (-1)            ELSE cd.costadjustmentll        END AS costadjustmentll, cd.cumulatedamt, cd.cumulatedamtll, cd.cumulatedqty + cd.qty AS endingqtybalance, cd.cumulatedamt + cd.cumulatedamtll +        CASE            WHEN cd.qty < 0 OR cd.qty = 0 AND cd.cumulatedqty < 0 THEN cd.costamt * (-1)            ELSE cd.costamt        END +        CASE            WHEN cd.qty < 0 OR cd.qty = 0 AND cd.cumulatedqty < 0 THEN cd.costamtll * (-1)            ELSE cd.costamtll        END +        CASE            WHEN cd.qty < 0 OR cd.qty = 0 AND cd.cumulatedqty < 0 THEN cd.costadjustment * (-1)            ELSE cd.costadjustment        END +        CASE            WHEN cd.qty < 0 OR cd.qty = 0 AND cd.cumulatedqty < 0 THEN cd.costadjustmentll * (-1)            ELSE cd.costadjustmentll        END AS endingbalance,       t.C_Project_ID,       t.C_Activity_ID,       t.C_Campaign_ID,       t.C_Region_ID,       t.C_BPartner_ID,       t.User1_ID,       t.User2_ID,       t.User3_ID,       t.User4_ID   FROM M_Product p   JOIN RV_Transaction t ON t.M_Product_ID = p.M_Product_ID   LEFT JOIN M_CostDetail cd ON cd.M_Transaction_ID = t.M_Transaction_ID AND cd.M_Product_ID = p.M_Product_ID   LEFT JOIN M_CostType ct ON ct.M_CostType_id = cd.M_CostType_ID   LEFT JOIN M_CostElement ce ON ce.M_CostElement_ID = cd.M_CostElement_ID;