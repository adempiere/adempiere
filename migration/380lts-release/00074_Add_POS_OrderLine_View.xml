<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<Migrations>
  <Migration EntityType="D" Name="Add View for Order Line ADempiere POS" ReleaseNo="3.9.0" SeqNo="00074">
    <Comments>With it migration you can have a view for POS Order Line</Comments>
    <Step DBType="Postgres" Parse="Y" SeqNo="10" StepType="SQL">
      <SQLStatement>CREATE OR REPLACE VIEW POS_OrderLine_v AS 
 SELECT ol.C_OrderLine_ID,
    ol.C_Order_ID,
    ol.AD_Client_ID,
    ol.AD_Org_ID,
    ol.IsActive,
    ol.Created,
    ol.CreatedBy,
    ol.Updated,
    ol.UpdatedBy,
    p.Name AS ProductName,
    ol.PriceActual,
    ol.QtyOrdered,
    uom.UOMSymbol AS UOMSymbol,
    t.TaxindIcator,
    t.Rate,
    ol.LineNetAmt,
    (ol.LineNetAmt + ((ol.LineNetAmt * t.Rate) / 100)) AS GrandTotal,
    ol.Discount
  FROM c_orderline ol
     INNER JOIN C_UOM uom ON(ol.C_UOM_ID = uom.C_UOM_ID)
     INNER JOIN C_Order i ON(ol.C_Order_ID = i.C_Order_ID)
     LEFT JOIN M_Product p ON(ol.M_Product_ID = p.M_Product_ID)
     LEFT JOIN C_Tax t ON(ol.C_Tax_ID = t.C_Tax_ID) ORDER BY ol.Line DESC</SQLStatement>
      <RollbackStatement>DROP VIEW IF EXISTS POS_OrderLine_v</RollbackStatement>
    </Step>
    <Step DBType="Oracle" Parse="Y" SeqNo="20" StepType="SQL">
      <SQLStatement>CREATE OR REPLACE VIEW POS_OrderLine_v 
	(C_OrderLine_ID, C_Order_ID, AD_Client_ID, AD_Org_ID, IsActive, 
	Created, CreatedBy, Updated, UpdatedBy, ProductName, PriceActual, 
	QtyOrdered, UOMSymbol, TaxindIcator, Rate, LineNetAmt, GrandTotal, Discount) AS 
 SELECT ol.C_OrderLine_ID,
    ol.C_Order_ID,
    ol.AD_Client_ID,
    ol.AD_Org_ID,
    ol.IsActive,
    ol.Created,
    ol.CreatedBy,
    ol.Updated,
    ol.UpdatedBy,
    p.Name AS ProductName,
    ol.PriceActual,
    ol.QtyOrdered,
    uom.UOMSymbol AS UOMSymbol,
    t.TaxindIcator,
    t.Rate,
    ol.LineNetAmt,
    (ol.LineNetAmt + ((ol.LineNetAmt * t.Rate) / 100)) AS GrandTotal,
    ol.Discount
  FROM c_orderline ol
     INNER JOIN C_UOM uom ON(ol.C_UOM_ID = uom.C_UOM_ID)
     INNER JOIN C_Order i ON(ol.C_Order_ID = i.C_Order_ID)
     LEFT JOIN M_Product p ON(ol.M_Product_ID = p.M_Product_ID)
     LEFT JOIN C_Tax t ON(ol.C_Tax_ID = t.C_Tax_ID) ORDER BY ol.Line DESC</SQLStatement>
      <RollbackStatement>DROP VIEW POS_OrderLine_v</RollbackStatement>
    </Step>
    <Step DBType="MySQL" Parse="Y" SeqNo="30" StepType="SQL">
      <SQLStatement>CREATE OR REPLACE VIEW POS_OrderLine_v AS 
 SELECT ol.C_OrderLine_ID,
    ol.C_Order_ID,
    ol.AD_Client_ID,
    ol.AD_Org_ID,
    ol.IsActive,
    ol.Created,
    ol.CreatedBy,
    ol.Updated,
    ol.UpdatedBy,
    p.Name AS ProductName,
    ol.PriceActual,
    ol.QtyOrdered,
    uom.UOMSymbol AS UOMSymbol,
    t.TaxindIcator,
    t.Rate,
    ol.LineNetAmt,
    (ol.LineNetAmt + ((ol.LineNetAmt * t.Rate) / 100)) AS GrandTotal,
    ol.Discount
  FROM c_orderline ol
     INNER JOIN C_UOM uom ON(ol.C_UOM_ID = uom.C_UOM_ID)
     INNER JOIN C_Order i ON(ol.C_Order_ID = i.C_Order_ID)
     LEFT JOIN M_Product p ON(ol.M_Product_ID = p.M_Product_ID)
     LEFT JOIN C_Tax t ON(ol.C_Tax_ID = t.C_Tax_ID) ORDER BY ol.Line DESC</SQLStatement>
      <RollbackStatement>DROP VIEW IF EXISTS POS_OrderLine_v</RollbackStatement>
    </Step>
  </Migration>
</Migrations>
