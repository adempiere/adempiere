<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<Migrations>
  <Migration EntityType="D" Name="Is Allow Copy in model #922 contribution from #936(Adaxa)" ReleaseNo="3.9.0" SeqNo="01130">
      <Comments>https://github.com/adempiere/adempiere/issues/922</Comments>
      <Step DBType="Oracle" SeqNo="40" StepType="SQL">
      <SQLStatement>
-- Sep 9, 2011 10:59:43 AM COT
-- IDEMPIERE-67 ProcessedOn should not be copied by MOrder.copyFrom
INSERT INTO AD_Column (AD_Client_ID,AD_Column_ID,AD_Element_ID,AD_Org_ID,AD_Reference_ID,AD_Table_ID,ColumnName,Created,CreatedBy,DefaultValue,Description,EntityType,FieldLength,IsActive,IsAllowLogging,IsAlwaysUpdateable,IsAutocomplete,IsEncrypted,IsIdentifier,IsKey,IsMandatory,IsParent,IsSelectionColumn,IsSyncDatabase,IsTranslated,IsUpdateable,Name,SeqNo,Updated,UpdatedBy,Version) VALUES (0,62199,57572,0,20,101,&apos;IsAllowCopy&apos;,TO_DATE(&apos;2011-09-09 10:59:42&apos;,&apos;YYYY-MM-DD HH24:MI:SS&apos;),100,&apos;Y&apos;,&apos;Determine if a column must be copied when pushing the button to copy record&apos;,&apos;D&apos;,1,&apos;Y&apos;,&apos;Y&apos;,&apos;N&apos;,&apos;N&apos;,&apos;N&apos;,&apos;N&apos;,&apos;N&apos;,&apos;Y&apos;,&apos;N&apos;,&apos;N&apos;,&apos;N&apos;,&apos;N&apos;,&apos;Y&apos;,&apos;Allow Copy&apos;,0,TO_DATE(&apos;2011-09-09 10:59:42&apos;,&apos;YYYY-MM-DD HH24:MI:SS&apos;),100,0)
;</SQLStatement>
      <RollbackStatement></RollbackStatement>
    </Step>
    <Step DBType="Oracle" SeqNo="50" StepType="SQL">
      <SQLStatement>
-- Sep 9, 2011 10:59:43 AM COT
-- IDEMPIERE-67 ProcessedOn should not be copied by MOrder.copyFrom
INSERT INTO AD_Column_Trl (AD_Language,AD_Column_ID, Name, IsTranslated,AD_Client_ID,AD_Org_ID,Created,Createdby,Updated,UpdatedBy) SELECT l.AD_Language,t.AD_Column_ID, t.Name, &apos;N&apos;,t.AD_Client_ID,t.AD_Org_ID,t.Created,t.Createdby,t.Updated,t.UpdatedBy FROM AD_Language l, AD_Column t WHERE l.IsActive=&apos;Y&apos; AND l.IsSystemLanguage=&apos;Y&apos; AND l.IsBaseLanguage=&apos;N&apos; AND t.AD_Column_ID=62199 AND NOT EXISTS (SELECT * FROM AD_Column_Trl tt WHERE tt.AD_Language=l.AD_Language AND tt.AD_Column_ID=t.AD_Column_ID)
;</SQLStatement>
      <RollbackStatement></RollbackStatement>
    </Step>
    <Step DBType="Oracle" SeqNo="60" StepType="SQL">
      <SQLStatement>
-- Sep 9, 2011 11:00:47 AM COT
-- IDEMPIERE-67 ProcessedOn should not be copied by MOrder.copyFrom
UPDATE AD_Field SET IsSameLine=&apos;N&apos;, SeqNo=390,Updated=TO_DATE(&apos;2011-09-09 11:00:47&apos;,&apos;YYYY-MM-DD HH24:MI:SS&apos;),UpdatedBy=100 WHERE AD_Field_ID=5122
;</SQLStatement>
      <RollbackStatement></RollbackStatement>
    </Step>
    <Step DBType="Oracle" SeqNo="70" StepType="SQL">
      <SQLStatement>
-- Sep 9, 2011 11:01:22 AM COT
-- IDEMPIERE-67 ProcessedOn should not be copied by MOrder.copyFrom
INSERT INTO AD_Field (AD_Client_ID,AD_Column_ID,AD_Field_ID,AD_Org_ID,AD_Tab_ID,Created,CreatedBy,Description,DisplayLength,EntityType,IsActive,IsCentrallyMaintained,IsDisplayed,IsEncrypted,IsFieldOnly,IsHeading,IsReadOnly,IsSameLine,Name,SeqNo,SortNo,Updated,UpdatedBy) VALUES (0,62199,62467,0,101,TO_DATE(&apos;2011-09-09 11:01:22&apos;,&apos;YYYY-MM-DD HH24:MI:SS&apos;),100,&apos;Determine if a column must be copied when pushing the button to copy record&apos;,10,&apos;D&apos;,&apos;Y&apos;,&apos;Y&apos;,&apos;Y&apos;,&apos;N&apos;,&apos;N&apos;,&apos;N&apos;,&apos;N&apos;,&apos;Y&apos;,&apos;Allow Copy&apos;,380,0,TO_DATE(&apos;2011-09-09 11:01:22&apos;,&apos;YYYY-MM-DD HH24:MI:SS&apos;),100)
;</SQLStatement>
      <RollbackStatement></RollbackStatement>
    </Step>
    <Step DBType="Oracle" SeqNo="80" StepType="SQL">
      <SQLStatement>
-- Sep 9, 2011 11:01:22 AM COT
-- IDEMPIERE-67 ProcessedOn should not be copied by MOrder.copyFrom
INSERT INTO AD_Field_Trl (AD_Language,AD_Field_ID, Description,Help,Name, IsTranslated,AD_Client_ID,AD_Org_ID,Created,Createdby,Updated,UpdatedBy) SELECT l.AD_Language,t.AD_Field_ID, t.Description,t.Help,t.Name, &apos;N&apos;,t.AD_Client_ID,t.AD_Org_ID,t.Created,t.Createdby,t.Updated,t.UpdatedBy FROM AD_Language l, AD_Field t WHERE l.IsActive=&apos;Y&apos; AND l.IsSystemLanguage=&apos;Y&apos; AND l.IsBaseLanguage=&apos;N&apos; AND t.AD_Field_ID=62467 AND NOT EXISTS (SELECT * FROM AD_Field_Trl tt WHERE tt.AD_Language=l.AD_Language AND tt.AD_Field_ID=t.AD_Field_ID)
;</SQLStatement>
      <RollbackStatement></RollbackStatement>
    </Step>
    <Step DBType="Oracle" SeqNo="90" StepType="SQL">
      <SQLStatement>
-- Sep 9, 2011 11:01:35 AM COT
-- IDEMPIERE-67 ProcessedOn should not be copied by MOrder.copyFrom
UPDATE AD_Field SET DisplayLength=10,Updated=TO_DATE(&apos;2011-09-09 11:01:35&apos;,&apos;YYYY-MM-DD HH24:MI:SS&apos;),UpdatedBy=100 WHERE AD_Field_ID=56317
;</SQLStatement>
      <RollbackStatement></RollbackStatement>
    </Step>   
    <Step DBType="Oracle" SeqNo="130" StepType="SQL">
      <SQLStatement>
-- Sep 17, 2016 11:52:39 AM COT
-- ADEMPIERE
ALTER TABLE AD_Column ADD IsAllowCopy CHAR(1) DEFAULT NULL 
;</SQLStatement>
      <RollbackStatement></RollbackStatement>
    </Step>  
    <Step DBType="Oracle" SeqNo="170" StepType="SQL">
      <SQLStatement>
-- Backward compatibility with old PO copyValues method
UPDATE AD_Column SET IsAllowCopy=&apos;N&apos; WHERE ColumnName IN (
&apos;Created&apos;,
&apos;Created&apos;,
&apos;CreatedBy&apos;,
&apos;Updated&apos;,
&apos;UpdatedBy&apos;,
&apos;IsActive&apos;,
&apos;AD_Client_ID&apos;,
&apos;AD_Org_ID&apos;,
&apos;Processing&apos;
);</SQLStatement>
      <RollbackStatement></RollbackStatement>
    </Step>
    <Step DBType="Oracle" SeqNo="210" StepType="SQL">
      <SQLStatement>
-- new columns found to be problematic
UPDATE AD_Column SET IsAllowCopy=&apos;N&apos; WHERE ColumnName IN (
&apos;ProcessedOn&apos;
);</SQLStatement>
      <RollbackStatement></RollbackStatement>
    </Step>
    <Step DBType="Oracle" SeqNo="230" StepType="SQL">
      <SQLStatement>
-- key columns
UPDATE AD_Column SET IsAllowCopy=&apos;N&apos; WHERE IsKey=&apos;Y&apos;;</SQLStatement>
      <RollbackStatement></RollbackStatement>
    </Step>
    <Step DBType="Oracle" SeqNo="240" StepType="SQL">
      <SQLStatement>
-- virtual columns
UPDATE AD_Column SET IsAllowCopy=&apos;N&apos; WHERE ColumnSQL IS NOT NULL;</SQLStatement>
      <RollbackStatement></RollbackStatement>
    </Step>
    <Step DBType="Oracle" SeqNo="260" StepType="SQL">
      <SQLStatement>
  CREATE OR REPLACE VIEW AD_FIELD_V AS 
  SELECT t.AD_Window_ID, f.AD_Tab_ID, f.AD_Field_ID, tbl.AD_Table_ID, f.AD_Column_ID, 
 f.NAME, f.Description, f.Help, f.IsDisplayed, f.DisplayLogic, f.DisplayLength, 
 f.SeqNo, f.SortNo, f.IsSameLine, f.IsHeading, f.IsFieldOnly, f.IsReadOnly, 
 f.IsEncrypted AS IsEncryptedField, f.ObscureType,
 c.ColumnName, c.ColumnSQL, c.FieldLength, c.VFormat,
 COALESCE(f.DefaultValue, c.DefaultValue) AS DefaultValue,
 c.IsKey, c.IsParent, 
 COALESCE(f.IsMandatory, c.IsMandatory) AS IsMandatory, 
    c.IsIdentifier, c.IsTranslated, COALESCE(f.AD_Reference_Value_ID, c.AD_Reference_Value_ID) AS AD_Reference_Value_ID, 
 c.Callout, COALESCE(f.AD_Reference_ID, c.AD_Reference_ID) AS AD_Reference_ID, 
    COALESCE(f.AD_Val_Rule_ID, c.AD_Val_Rule_ID) AS AD_Val_Rule_ID, c.AD_Process_ID, c.IsAlwaysUpdateable,
 c.ReadOnlyLogic, c.MandatoryLogic, c.IsUpdateable, c.IsEncrypted AS IsEncryptedColumn, 
    c.IsSelectionColumn, c.isrange,
 tbl.TableName, c.ValueMin, c.ValueMax,
 fg.NAME AS FieldGroup, vr.Code AS ValidationCode,
 f.Included_Tab_ID, fg.FieldGroupType, fg.IsCollapsedByDefault,
 COALESCE(f.InfoFactoryClass, c.InfoFactoryClass) as InfoFactoryClass,
 c.IsAutocomplete, f.preferredwidth, c.AD_Chart_ID, f.isdisplayedgrid, f.seqnogrid, f.isembedded, COALESCE(f.IsAllowCopy, c.IsAllowCopy) AS IsAllowCopy
FROM AD_FIELD f 
  INNER JOIN AD_TAB t ON (f.AD_Tab_ID = t.AD_Tab_ID)
  LEFT OUTER JOIN AD_FIELDGROUP fg ON (f.AD_FieldGroup_ID = fg.AD_FieldGroup_ID) 
  LEFT OUTER JOIN AD_COLUMN c ON (f.AD_Column_ID = c.AD_Column_ID)
 INNER JOIN AD_TABLE tbl ON (c.AD_Table_ID = tbl.AD_Table_ID)
 INNER JOIN AD_REFERENCE r ON (c.AD_Reference_ID = r.AD_Reference_ID)
 LEFT OUTER JOIN AD_VAL_RULE vr ON (vr.AD_Val_Rule_ID = COALESCE(f.AD_Val_Rule_ID, c.AD_Val_Rule_ID))
WHERE f.IsActive = &apos;Y&apos; 
  AND c.IsActive = &apos;Y&apos;;</SQLStatement>
      <RollbackStatement></RollbackStatement>
    </Step>
    <Step DBType="Oracle" SeqNo="270" StepType="SQL">
      <SQLStatement>
    CREATE OR REPLACE VIEW AD_FIELD_VT AS 
    SELECT trl.AD_LANGUAGE, t.AD_Window_ID, f.AD_Tab_ID, f.AD_Field_ID, tbl.AD_Table_ID, f.AD_Column_ID, 
   trl.NAME, trl.Description, trl.Help, f.IsDisplayed, f.DisplayLogic, f.DisplayLength, 
   f.SeqNo, f.SortNo, f.IsSameLine, f.IsHeading, f.IsFieldOnly, f.IsReadOnly, 
   f.IsEncrypted AS IsEncryptedField, f.ObscureType,
   c.ColumnName, c.ColumnSQL, c.FieldLength, c.VFormat,
   COALESCE(f.DefaultValue, c.DefaultValue) AS DefaultValue,
   c.IsKey, c.IsParent, 
   COALESCE(f.IsMandatory, c.IsMandatory) AS IsMandatory, 
      c.IsIdentifier, c.IsTranslated, COALESCE(f.AD_Reference_Value_ID, c.AD_Reference_Value_ID) AS AD_Reference_Value_ID, 
   c.Callout, COALESCE(f.AD_Reference_ID, c.AD_Reference_ID) AS AD_Reference_ID, 
      COALESCE(f.AD_Val_Rule_ID, c.AD_Val_Rule_ID) as AD_Val_Rule_ID, c.AD_Process_ID, c.IsAlwaysUpdateable,
   c.ReadOnlyLogic, c.MandatoryLogic, c.IsUpdateable, c.IsEncrypted AS IsEncryptedColumn, c.IsSelectionColumn,
   tbl.TableName, c.ValueMin, c.ValueMax, 
   fgt.NAME AS FieldGroup, vr.Code AS ValidationCode,
   f.Included_Tab_ID, fg.FieldGroupType, fg.IsCollapsedByDefault,
   COALESCE(f.InfoFactoryClass, c.InfoFactoryClass) as InfoFactoryClass,
   c.IsAutocomplete, f.preferredwidth, c.AD_Chart_ID, f.isdisplayedgrid, f.seqnogrid, f.isembedded, COALESCE(f.IsAllowCopy, c.IsAllowCopy) AS IsAllowCopy
  FROM AD_FIELD f 
   INNER JOIN AD_FIELD_TRL trl ON (f.AD_Field_ID = trl.AD_Field_ID)
    INNER JOIN AD_TAB t ON (f.AD_Tab_ID = t.AD_Tab_ID)
    LEFT OUTER JOIN AD_FIELDGROUP fg ON (f.AD_FieldGroup_ID = fg.AD_FieldGroup_ID) 
    LEFT OUTER JOIN AD_FIELDGROUP_TRL fgt ON 
   (f.AD_FieldGroup_ID = fgt.AD_FieldGroup_ID AND trl.AD_LANGUAGE=fgt.AD_LANGUAGE)
    LEFT OUTER JOIN AD_COLUMN c ON (f.AD_Column_ID = c.AD_Column_ID)
   INNER JOIN AD_TABLE tbl ON (c.AD_Table_ID = tbl.AD_Table_ID)
   INNER JOIN AD_REFERENCE r ON (c.AD_Reference_ID = r.AD_Reference_ID)
   LEFT OUTER JOIN AD_VAL_RULE vr ON (vr.AD_Val_Rule_ID=COALESCE(f.AD_Val_Rule_ID, c.AD_Val_Rule_ID))
  WHERE f.IsActive = &apos;Y&apos; 
  AND c.IsActive = &apos;Y&apos;;</SQLStatement>
      <RollbackStatement></RollbackStatement>
    </Step>
    <Step DBType="Postgres" SeqNo="40" StepType="SQL">
      <SQLStatement>
-- Sep 9, 2011 10:59:43 AM COT
-- IDEMPIERE-67 ProcessedOn should not be copied by MOrder.copyFrom
INSERT INTO AD_Column (AD_Client_ID,AD_Column_ID,AD_Element_ID,AD_Org_ID,AD_Reference_ID,AD_Table_ID,ColumnName,Created,CreatedBy,DefaultValue,Description,EntityType,FieldLength,IsActive,IsAllowLogging,IsAlwaysUpdateable,IsAutocomplete,IsEncrypted,IsIdentifier,IsKey,IsMandatory,IsParent,IsSelectionColumn,IsSyncDatabase,IsTranslated,IsUpdateable,Name,SeqNo,Updated,UpdatedBy,Version) VALUES (0,62199,57572,0,20,101,&apos;IsAllowCopy&apos;,TO_TIMESTAMP(&apos;2011-09-09 10:59:42&apos;,&apos;YYYY-MM-DD HH24:MI:SS&apos;),100,&apos;Y&apos;,&apos;Determine if a column must be copied when pushing the button to copy record&apos;,&apos;D&apos;,1,&apos;Y&apos;,&apos;Y&apos;,&apos;N&apos;,&apos;N&apos;,&apos;N&apos;,&apos;N&apos;,&apos;N&apos;,&apos;Y&apos;,&apos;N&apos;,&apos;N&apos;,&apos;N&apos;,&apos;N&apos;,&apos;Y&apos;,&apos;Allow Copy&apos;,0,TO_TIMESTAMP(&apos;2011-09-09 10:59:42&apos;,&apos;YYYY-MM-DD HH24:MI:SS&apos;),100,0)
;</SQLStatement>
      <RollbackStatement></RollbackStatement>
    </Step>
    <Step DBType="Postgres" SeqNo="50" StepType="SQL">
      <SQLStatement>
-- Sep 9, 2011 10:59:43 AM COT
-- IDEMPIERE-67 ProcessedOn should not be copied by MOrder.copyFrom
INSERT INTO AD_Column_Trl (AD_Language,AD_Column_ID, Name, IsTranslated,AD_Client_ID,AD_Org_ID,Created,Createdby,Updated,UpdatedBy) SELECT l.AD_Language,t.AD_Column_ID, t.Name, &apos;N&apos;,t.AD_Client_ID,t.AD_Org_ID,t.Created,t.Createdby,t.Updated,t.UpdatedBy FROM AD_Language l, AD_Column t WHERE l.IsActive=&apos;Y&apos; AND l.IsSystemLanguage=&apos;Y&apos; AND l.IsBaseLanguage=&apos;N&apos; AND t.AD_Column_ID=62199 AND NOT EXISTS (SELECT * FROM AD_Column_Trl tt WHERE tt.AD_Language=l.AD_Language AND tt.AD_Column_ID=t.AD_Column_ID)
;</SQLStatement>
      <RollbackStatement></RollbackStatement>
    </Step>
    <Step DBType="Postgres" SeqNo="60" StepType="SQL">
      <SQLStatement>
-- Sep 9, 2011 11:00:47 AM COT
-- IDEMPIERE-67 ProcessedOn should not be copied by MOrder.copyFrom
UPDATE AD_Field SET IsSameLine=&apos;N&apos;, SeqNo=390,Updated=TO_TIMESTAMP(&apos;2011-09-09 11:00:47&apos;,&apos;YYYY-MM-DD HH24:MI:SS&apos;),UpdatedBy=100 WHERE AD_Field_ID=5122
;</SQLStatement>
      <RollbackStatement></RollbackStatement>
    </Step>
    <Step DBType="Postgres" SeqNo="70" StepType="SQL">
      <SQLStatement>
-- Sep 9, 2011 11:01:22 AM COT
-- IDEMPIERE-67 ProcessedOn should not be copied by MOrder.copyFrom
INSERT INTO AD_Field (AD_Client_ID,AD_Column_ID,AD_Field_ID,AD_Org_ID,AD_Tab_ID,Created,CreatedBy,Description,DisplayLength,EntityType,IsActive,IsCentrallyMaintained,IsDisplayed,IsEncrypted,IsFieldOnly,IsHeading,IsReadOnly,IsSameLine,Name,SeqNo,SortNo,Updated,UpdatedBy) VALUES (0,62199,62467,0,101,TO_TIMESTAMP(&apos;2011-09-09 11:01:22&apos;,&apos;YYYY-MM-DD HH24:MI:SS&apos;),100,&apos;Determine if a column must be copied when pushing the button to copy record&apos;,10,&apos;D&apos;,&apos;Y&apos;,&apos;Y&apos;,&apos;Y&apos;,&apos;N&apos;,&apos;N&apos;,&apos;N&apos;,&apos;N&apos;,&apos;Y&apos;,&apos;Allow Copy&apos;,380,0,TO_TIMESTAMP(&apos;2011-09-09 11:01:22&apos;,&apos;YYYY-MM-DD HH24:MI:SS&apos;),100)
;</SQLStatement>
      <RollbackStatement></RollbackStatement>
    </Step>
    <Step DBType="Postgres" SeqNo="80" StepType="SQL">
      <SQLStatement>
-- Sep 9, 2011 11:01:22 AM COT
-- IDEMPIERE-67 ProcessedOn should not be copied by MOrder.copyFrom
INSERT INTO AD_Field_Trl (AD_Language,AD_Field_ID, Description,Help,Name, IsTranslated,AD_Client_ID,AD_Org_ID,Created,Createdby,Updated,UpdatedBy) SELECT l.AD_Language,t.AD_Field_ID, t.Description,t.Help,t.Name, &apos;N&apos;,t.AD_Client_ID,t.AD_Org_ID,t.Created,t.Createdby,t.Updated,t.UpdatedBy FROM AD_Language l, AD_Field t WHERE l.IsActive=&apos;Y&apos; AND l.IsSystemLanguage=&apos;Y&apos; AND l.IsBaseLanguage=&apos;N&apos; AND t.AD_Field_ID=62467 AND NOT EXISTS (SELECT * FROM AD_Field_Trl tt WHERE tt.AD_Language=l.AD_Language AND tt.AD_Field_ID=t.AD_Field_ID)
;</SQLStatement>
      <RollbackStatement></RollbackStatement>
    </Step>
    <Step DBType="Postgres" SeqNo="90" StepType="SQL">
      <SQLStatement>
-- Sep 9, 2011 11:01:35 AM COT
-- IDEMPIERE-67 ProcessedOn should not be copied by MOrder.copyFrom
UPDATE AD_Field SET DisplayLength=10,Updated=TO_TIMESTAMP(&apos;2011-09-09 11:01:35&apos;,&apos;YYYY-MM-DD HH24:MI:SS&apos;),UpdatedBy=100 WHERE AD_Field_ID=56317
;</SQLStatement>
      <RollbackStatement></RollbackStatement>
    </Step>   
    <Step DBType="Postgres" SeqNo="130" StepType="SQL">
      <SQLStatement>
-- Sep 17, 2016 11:52:39 AM COT
-- ADEMPIERE
ALTER TABLE AD_Column ADD IsAllowCopy CHAR(1) DEFAULT NULL 
;</SQLStatement>
      <RollbackStatement></RollbackStatement>
    </Step>  
    <Step DBType="Postgres" SeqNo="170" StepType="SQL">
      <SQLStatement>
-- Backward compatibility with old PO copyValues method
UPDATE AD_Column SET IsAllowCopy=&apos;N&apos; WHERE ColumnName IN (
&apos;Created&apos;,
&apos;Created&apos;,
&apos;CreatedBy&apos;,
&apos;Updated&apos;,
&apos;UpdatedBy&apos;,
&apos;IsActive&apos;,
&apos;AD_Client_ID&apos;,
&apos;AD_Org_ID&apos;,
&apos;Processing&apos;
);</SQLStatement>
      <RollbackStatement></RollbackStatement>
    </Step>
    <Step DBType="Postgres" SeqNo="210" StepType="SQL">
      <SQLStatement>
-- new columns found to be problematic
UPDATE AD_Column SET IsAllowCopy=&apos;N&apos; WHERE ColumnName IN (
&apos;ProcessedOn&apos;
);</SQLStatement>
      <RollbackStatement></RollbackStatement>
    </Step>
    <Step DBType="Postgres" SeqNo="230" StepType="SQL">
      <SQLStatement>
-- key columns
UPDATE AD_Column SET IsAllowCopy=&apos;N&apos; WHERE IsKey=&apos;Y&apos;;</SQLStatement>
      <RollbackStatement></RollbackStatement>
    </Step>
    <Step DBType="Postgres" SeqNo="240" StepType="SQL">
      <SQLStatement>
-- virtual columns
UPDATE AD_Column SET IsAllowCopy=&apos;N&apos; WHERE ColumnSQL IS NOT NULL;</SQLStatement>
      <RollbackStatement></RollbackStatement>
    </Step>
    <Step DBType="Postgres" SeqNo="260" StepType="SQL">
      <SQLStatement>
DROP VIEW ad_field_v;</SQLStatement>
      <RollbackStatement></RollbackStatement>
    </Step>
    <Step DBType="Postgres" SeqNo="270" StepType="SQL">
      <SQLStatement>
CREATE OR REPLACE VIEW ad_field_v AS 
 SELECT t.ad_window_id, f.ad_tab_id, f.ad_field_id, tbl.ad_table_id, f.ad_column_id, 
 f.name, f.description, f.help, f.isdisplayed, f.displaylogic, f.displaylength, f.seqno, 
 f.sortno, f.issameline, f.isheading, f.isfieldonly, f.isreadonly, f.isencrypted AS isencryptedfield, 
 f.obscuretype, c.columnname, c.columnsql, c.fieldlength, c.vformat, 
 COALESCE(f.defaultvalue, c.defaultvalue) AS defaultvalue, c.iskey, c.isparent, 
 COALESCE(f.ismandatory, c.ismandatory) AS ismandatory, c.isidentifier, c.istranslated, 
 COALESCE(f.ad_reference_value_id, c.ad_reference_value_id) AS ad_reference_value_id, c.callout, 
 COALESCE(f.ad_reference_id, c.ad_reference_id) AS ad_reference_id, 
 COALESCE(f.ad_val_rule_id, c.ad_val_rule_id) AS ad_val_rule_id, c.ad_process_id, 
 c.isalwaysupdateable, c.readonlylogic, c.mandatorylogic, c.isupdateable, 
 c.isencrypted AS isencryptedcolumn, c.isselectioncolumn, c.isrange, tbl.tablename, c.valuemin, c.valuemax, 
 fg.name AS fieldgroup, vr.code AS validationcode, f.included_tab_id, fg.fieldgrouptype, fg.iscollapsedbydefault, 
 COALESCE(f.infofactoryclass, c.infofactoryclass) AS infofactoryclass, c.isautocomplete, f.preferredwidth, c.ad_chart_id, f.isdisplayedgrid, f.seqnogrid, f.isembedded,
 COALESCE(f.IsAllowCopy, c.IsAllowCopy) AS IsAllowCopy
   FROM ad_field f
   JOIN ad_tab t ON f.ad_tab_id = t.ad_tab_id
   LEFT JOIN ad_fieldgroup fg ON f.ad_fieldgroup_id = fg.ad_fieldgroup_id
   LEFT JOIN ad_column c ON f.ad_column_id = c.ad_column_id
   JOIN ad_table tbl ON c.ad_table_id = tbl.ad_table_id
   JOIN ad_reference r ON c.ad_reference_id = r.ad_reference_id
   LEFT JOIN ad_val_rule vr ON vr.ad_val_rule_id = COALESCE(f.ad_val_rule_id, c.ad_val_rule_id)
  WHERE f.isactive = &apos;Y&apos;::bpchar AND c.isactive = &apos;Y&apos;::bpchar;</SQLStatement>
      <RollbackStatement></RollbackStatement>
    </Step>
    <Step DBType="Postgres" SeqNo="280" StepType="SQL">
      <SQLStatement>
DROP VIEW ad_field_vt;</SQLStatement>
      <RollbackStatement></RollbackStatement>
    </Step>
    <Step DBType="Postgres" SeqNo="290" StepType="SQL">
      <SQLStatement>
CREATE OR REPLACE VIEW ad_field_vt AS 
 SELECT trl.ad_language, t.ad_window_id, f.ad_tab_id, f.ad_field_id, tbl.ad_table_id, f.ad_column_id, trl.name, trl.description, 
 trl.help, f.isdisplayed, f.displaylogic, f.displaylength, f.seqno, f.sortno, f.issameline, f.isheading, f.isfieldonly, f.isreadonly, 
 f.isencrypted AS isencryptedfield, f.obscuretype, c.columnname, c.columnsql, c.fieldlength, c.vformat, COALESCE(f.defaultvalue, c.defaultvalue) AS defaultvalue, 
 c.iskey, c.isparent, COALESCE(f.ismandatory, c.ismandatory) AS ismandatory, c.isidentifier, c.istranslated, 
 COALESCE(f.ad_reference_value_id, c.ad_reference_value_id) AS ad_reference_value_id, c.callout, COALESCE(f.ad_reference_id, c.ad_reference_id) AS ad_reference_id, 
 COALESCE(f.ad_val_rule_id, c.ad_val_rule_id) AS ad_val_rule_id, c.ad_process_id, c.isalwaysupdateable, c.readonlylogic, c.mandatorylogic, c.isupdateable, 
 c.isencrypted AS isencryptedcolumn, c.isselectioncolumn, tbl.tablename, c.valuemin, c.valuemax, fgt.name AS fieldgroup, vr.code AS validationcode, 
 f.included_tab_id, fg.fieldgrouptype, fg.iscollapsedbydefault, 
 COALESCE(f.infofactoryclass, c.infofactoryclass) AS infofactoryclass, c.isautocomplete, f.preferredwidth, c.ad_chart_id, f.isdisplayedgrid, f.seqnogrid, f.isembedded,
 COALESCE(f.IsAllowCopy, c.IsAllowCopy) AS IsAllowCopy
   FROM ad_field f
   JOIN ad_field_trl trl ON f.ad_field_id = trl.ad_field_id
   JOIN ad_tab t ON f.ad_tab_id = t.ad_tab_id
   LEFT JOIN ad_fieldgroup fg ON f.ad_fieldgroup_id = fg.ad_fieldgroup_id
   LEFT JOIN ad_fieldgroup_trl fgt ON f.ad_fieldgroup_id = fgt.ad_fieldgroup_id AND trl.ad_language::text = fgt.ad_language::text
   LEFT JOIN ad_column c ON f.ad_column_id = c.ad_column_id
   JOIN ad_table tbl ON c.ad_table_id = tbl.ad_table_id
   JOIN ad_reference r ON c.ad_reference_id = r.ad_reference_id
   LEFT JOIN ad_val_rule vr ON vr.ad_val_rule_id = COALESCE(f.ad_val_rule_id, c.ad_val_rule_id)
  WHERE f.isactive = &apos;Y&apos;::bpchar AND c.isactive = &apos;Y&apos;::bpchar;</SQLStatement>
      <RollbackStatement></RollbackStatement>
    </Step>
  </Migration>
</Migrations>